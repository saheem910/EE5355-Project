/*
 * Automatically Generated from Mathematica.
 * Wed 29 Mar 2017 17:56:58 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var)
{
  double t1;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;
  double t10;
  double t11;
  double t12;
  double t13;
  double t14;
  double t15;
  double t16;
  double t17;
  double t18;
  double t19;
  double t20;
  double t21;
  double t22;
  double t23;
  double t24;
  double t25;
  double t26;
  double t27;
  double t28;
  double t29;
  double t30;
  double t31;
  double t32;
  double t33;
  double t34;
  double t35;
  double t36;
  double t37;
  double t38;
  double t39;
  double t40;
  double t41;
  double t42;
  double t43;
  double t44;
  double t45;
  double t46;
  double t47;
  double t48;
  double t49;
  double t50;
  double t51;
  double t52;
  double t53;
  double t54;
  double t55;
  double t56;
  double t57;
  double t58;
  double t59;
  double t60;
  double t61;
  double t62;
  double t63;
  double t64;
  double t65;
  double t66;
  double t67;
  double t68;
  double t69;
  double t70;
  double t71;
  double t72;
  double t73;
  double t74;
  double t75;
  double t76;
  double t77;
  double t78;
  double t79;
  double t80;
  double t81;
  double t82;
  double t83;
  double t84;
  double t85;
  double t86;
  double t87;
  double t88;
  double t89;
  double t90;
  double t91;
  double t92;
  double t93;
  double t94;
  double t95;
  double t96;
  double t97;
  double t98;
  double t99;
  double t100;
  double t101;
  double t102;
  double t103;
  double t104;
  double t105;
  double t106;
  double t107;
  double t108;
  double t109;
  double t110;
  double t111;
  double t112;
  double t113;
  double t114;
  double t115;
  double t116;
  double t117;
  double t118;
  double t119;
  double t120;
  double t121;
  double t122;
  double t123;
  double t124;
  double t125;
  double t126;
  double t127;
  double t128;
  double t129;
  double t130;
  double t131;
  double t132;
  double t133;
  double t134;
  double t135;
  double t136;
  double t137;
  double t138;
  double t139;
  double t140;
  double t141;
  double t142;
  double t143;
  double t144;
  double t145;
  double t146;
  double t147;
  double t148;
  double t149;
  double t150;
  double t151;
  double t152;
  double t153;
  double t154;
  double t155;
  double t156;
  double t157;
  double t158;
  double t159;
  double t160;
  double t161;
  double t162;
  double t163;
  double t164;
  double t165;
  double t166;
  double t167;
  double t168;
  double t169;
  double t170;
  double t171;
  double t172;
  double t173;
  double t174;
  double t175;
  double t176;
  double t177;
  double t178;
  double t179;
  double t180;
  double t181;
  double t182;
  double t183;
  double t184;
  double t185;
  double t186;
  double t187;
  double t188;
  double t189;
  double t190;
  double t191;
  double t192;
  double t193;
  double t194;
  double t195;
  double t196;
  double t197;
  double t198;
  double t199;
  double t200;
  double t201;
  double t202;
  double t203;
  double t204;
  double t205;
  double t206;
  double t207;
  double t208;
  double t209;
  double t210;
  double t211;
  double t212;
  double t213;
  double t214;
  double t215;
  double t216;
  double t217;
  double t218;
  double t219;
  double t220;
  double t221;
  double t222;
  double t223;
  double t224;
  double t225;
  double t226;
  double t227;
  double t228;
  double t229;
  double t230;
  double t231;
  double t232;
  double t233;
  double t234;
  double t235;
  double t236;
  double t237;
  double t238;
  double t239;
  double t240;
  double t241;
  double t242;
  double t243;
  double t244;
  double t245;
  double t246;
  double t247;
  double t248;
  double t249;
  double t250;
  double t251;
  double t252;
  double t253;
  double t254;
  double t255;
  double t256;
  double t257;
  double t258;
  double t259;
  double t260;
  double t261;
  double t262;
  double t263;
  double t264;
  double t265;
  double t266;
  double t267;
  double t268;
  double t269;
  double t270;
  double t271;
  double t272;
  double t273;
  double t274;
  double t275;
  double t276;
  double t277;
  double t278;
  double t279;
  double t280;
  double t281;
  double t282;
  double t283;
  double t284;
  double t285;
  double t286;
  double t287;
  double t288;
  double t289;
  double t290;
  double t291;
  double t292;
  double t293;
  double t294;
  double t295;
  double t296;
  double t297;
  double t298;
  double t299;
  double t300;
  double t301;
  double t302;
  double t303;
  double t304;
  double t305;
  double t306;
  double t307;
  double t308;
  double t309;
  double t310;
  double t311;
  double t312;
  double t313;
  double t314;
  double t315;
  double t316;
  double t317;
  double t318;
  double t319;
  double t320;
  double t321;
  double t322;
  double t323;
  double t324;
  double t325;
  double t326;
  double t327;
  double t328;
  double t329;
  double t330;
  double t331;
  double t332;
  double t333;
  double t334;
  double t335;
  double t336;
  double t337;
  double t338;
  double t339;
  double t340;
  double t341;
  double t342;
  double t343;
  double t344;
  double t345;
  double t346;
  double t347;
  double t348;
  double t349;
  double t350;
  double t351;
  double t352;
  double t353;
  double t354;
  double t355;
  double t356;
  double t357;
  double t358;
  double t359;
  double t360;
  double t361;
  double t362;
  double t363;
  double t364;
  double t365;
  double t366;
  double t367;
  double t368;
  double t369;
  double t370;
  double t371;
  double t372;
  double t373;
  double t374;
  double t375;
  double t376;
  double t377;
  double t378;
  double t379;
  double t380;
  double t381;
  double t382;
  double t383;
  double t384;
  double t385;
  double t386;
  double t387;
  double t388;
  double t389;
  double t390;
  double t391;
  double t392;
  double t393;
  double t394;
  double t395;
  double t396;
  double t397;
  double t398;
  double t399;
  double t400;
  double t401;
  double t402;
  double t403;
  double t404;
  double t405;
  double t406;
  double t407;
  double t408;
  double t409;
  double t410;
  double t411;
  double t412;
  double t413;
  double t414;
  double t415;
  double t416;
  double t417;
  double t418;
  double t419;
  double t420;
  double t421;
  double t422;
  double t423;
  double t424;
  double t425;
  double t426;
  double t427;
  double t428;
  double t429;
  double t430;
  double t431;
  double t432;
  double t433;
  double t434;
  double t435;
  double t436;
  double t437;
  double t438;
  double t439;
  double t440;
  double t441;
  double t442;
  double t443;
  double t444;
  double t445;
  double t446;
  double t447;
  double t448;
  double t449;
  double t450;
  double t451;
  double t452;
  double t453;
  double t454;
  double t455;
  double t456;
  double t457;
  double t458;
  double t459;
  double t460;
  double t461;
  double t462;
  double t463;
  double t464;
  double t465;
  double t466;
  double t467;
  double t468;
  double t469;
  double t470;
  double t471;
  double t472;
  double t473;
  double t474;
  double t475;
  double t476;
  double t477;
  double t478;
  double t479;
  double t480;
  double t481;
  double t482;
  double t483;
  double t484;
  double t485;
  double t486;
  double t487;
  double t488;
  double t489;
  double t490;
  double t491;
  double t492;
  double t493;
  double t494;
  double t495;
  double t496;
  double t497;
  double t498;
  double t499;
  double t500;
  double t501;
  double t502;
  double t503;
  double t504;
  double t505;
  double t506;
  double t507;
  double t508;
  double t509;
  double t510;
  double t511;
  double t512;
  double t513;
  double t514;
  double t515;
  double t516;
  double t517;
  double t518;
  double t519;
  double t520;
  double t521;
  double t522;
  double t523;
  double t524;
  double t525;
  double t526;
  double t527;
  double t528;
  double t529;
  double t530;
  double t531;
  double t532;
  double t533;
  double t534;
  double t535;
  double t536;
  double t537;
  double t538;
  double t539;
  double t540;
  double t541;
  double t542;
  double t543;
  double t544;
  double t545;
  double t546;
  double t547;
  double t548;
  double t549;
  double t550;
  double t551;
  double t552;
  double t553;
  double t554;
  double t555;
  double t556;
  double t557;
  double t558;
  double t559;
  double t560;
  double t561;
  double t562;
  double t563;
  double t564;
  double t565;
  double t566;
  double t567;
  double t568;
  double t569;
  double t570;
  double t571;
  double t572;
  double t573;
  double t574;
  double t575;
  double t576;
  double t577;
  double t578;
  double t579;
  double t580;
  double t581;
  double t582;
  double t583;
  double t584;
  double t585;
  double t586;
  double t587;
  double t588;
  double t589;
  double t590;
  double t591;
  double t592;
  double t593;
  double t594;
  double t595;
  double t596;
  double t597;
  double t598;
  double t599;
  double t600;
  double t601;
  double t602;
  double t603;
  double t604;
  double t605;
  double t606;
  double t607;
  double t608;
  double t609;
  double t610;
  double t611;
  double t612;
  double t613;
  double t614;
  double t615;
  double t616;
  double t617;
  double t618;
  double t619;
  double t620;
  double t621;
  double t622;
  double t623;
  double t624;
  double t625;
  double t626;
  t1 = var[3];
  t2 = Sin(t1);
  t3 = var[4];
  t4 = var[5];
  t5 = Cos(t3);
  t6 = Cos(t4);
  t7 = Sin(t3);
  t8 = t6*t2*t7;
  t9 = Cos(t1);
  t10 = Sin(t4);
  t11 = t9*t10;
  t12 = t8 + t11;
  t13 = var[8];
  t14 = Sin(t13);
  t15 = Cos(t13);
  t16 = t9*t6;
  t17 = -1.*t2*t7*t10;
  t18 = t16 + t17;
  t19 = var[13];
  t20 = Sin(t19);
  t21 = Cos(t19);
  t22 = -0.00313046*t5*t2;
  t23 = var[19];
  t24 = Sin(t23);
  t25 = Cos(t23);
  t26 = 0.089*t20*t12;
  t27 = -1.*t21;
  t28 = 1. + t27;
  t29 = 0.089*t28*t18;
  t30 = var[11];
  t31 = -1.*t20*t12;
  t32 = t21*t18;
  t33 = t31 + t32;
  t34 = t21*t12;
  t35 = t20*t18;
  t36 = t34 + t35;
  t37 = Sin(t30);
  t38 = Cos(t30);
  t39 = -0.089*t24*t12;
  t40 = -1.*t25;
  t41 = 1. + t40;
  t42 = -0.089*t41*t18;
  t43 = var[17];
  t44 = -1.*t24*t12;
  t45 = t25*t18;
  t46 = t44 + t45;
  t47 = t25*t12;
  t48 = t24*t18;
  t49 = t47 + t48;
  t50 = Sin(t43);
  t51 = Cos(t43);
  t52 = var[7];
  t53 = -1. + t15;
  t54 = 0.0125*t53*t12;
  t55 = 0.0125*t14*t18;
  t56 = -1.*t14*t12;
  t57 = t15*t18;
  t58 = t56 + t57;
  t59 = Cos(t52);
  t60 = Sin(t52);
  t61 = t15*t12;
  t62 = t14*t18;
  t63 = t61 + t62;
  t64 = 0.089*t5*t37*t2;
  t65 = -1.*t38;
  t66 = 1. + t65;
  t67 = 0.089*t66*t33;
  t68 = var[12];
  t69 = -1.*t5*t37*t2;
  t70 = t38*t33;
  t71 = t69 + t70;
  t72 = Cos(t68);
  t73 = Sin(t68);
  t74 = 0.05*t73;
  t75 = -1.*t38*t5*t2;
  t76 = -1.*t37*t33;
  t77 = t75 + t76;
  t78 = -0.089*t5*t50*t2;
  t79 = -1.*t51;
  t80 = 1. + t79;
  t81 = -0.089*t80*t46;
  t82 = var[18];
  t83 = -1.*t5*t50*t2;
  t84 = t51*t46;
  t85 = t83 + t84;
  t86 = Cos(t82);
  t87 = Sin(t82);
  t88 = 0.05*t87;
  t89 = -1.*t51*t5*t2;
  t90 = -1.*t50*t46;
  t91 = t89 + t90;
  t92 = -1.*t59;
  t93 = 1. + t92;
  t94 = 0.16197*t93;
  t95 = -0.0125*t60;
  t96 = t94 + t95;
  t97 = -1.*t5*t96*t2;
  t98 = -1. + t59;
  t99 = 0.0125*t98;
  t100 = -0.16197*t60;
  t101 = t99 + t100;
  t102 = t101*t63;
  t103 = t5*t60*t2;
  t104 = t59*t63;
  t105 = t103 + t104;
  t106 = var[6];
  t107 = -1.*t59*t5*t2;
  t108 = t60*t63;
  t109 = t107 + t108;
  t110 = Sin(t106);
  t111 = Cos(t106);
  t112 = -1.*t72;
  t113 = 1. + t112;
  t114 = 0.05*t113;
  t115 = t114 + t74;
  t116 = t115*t36;
  t117 = 0.089*t71;
  t118 = -1. + t72;
  t119 = 0.05*t118;
  t120 = t119 + t74;
  t121 = t120*t77;
  t122 = t73*t36;
  t123 = t72*t77;
  t124 = t122 + t123;
  t125 = var[14];
  t126 = t72*t36;
  t127 = -1.*t73*t77;
  t128 = t126 + t127;
  t129 = Sin(t125);
  t130 = Cos(t125);
  t131 = -1.*t86;
  t132 = 1. + t131;
  t133 = 0.05*t132;
  t134 = t133 + t88;
  t135 = t134*t49;
  t136 = -0.089*t85;
  t137 = -1. + t86;
  t138 = 0.05*t137;
  t139 = t138 + t88;
  t140 = t139*t91;
  t141 = t87*t49;
  t142 = t86*t91;
  t143 = t141 + t142;
  t144 = var[20];
  t145 = t86*t49;
  t146 = -1.*t87*t91;
  t147 = t145 + t146;
  t148 = Sin(t144);
  t149 = Cos(t144);
  t150 = -1.*t130;
  t151 = 1. + t150;
  t152 = -0.424*t151*t124;
  t153 = 0.424*t129*t128;
  t154 = -1.*t129*t124;
  t155 = t130*t128;
  t156 = t154 + t155;
  t157 = var[10];
  t158 = t130*t124;
  t159 = t129*t128;
  t160 = t158 + t159;
  t161 = Sin(t157);
  t162 = Cos(t157);
  t163 = -1.*t149;
  t164 = 1. + t163;
  t165 = -0.424*t164*t143;
  t166 = 0.424*t148*t147;
  t167 = -1.*t148*t143;
  t168 = t149*t147;
  t169 = t167 + t168;
  t170 = var[16];
  t171 = t149*t143;
  t172 = t148*t147;
  t173 = t171 + t172;
  t174 = Sin(t170);
  t175 = Cos(t170);
  t176 = var[9];
  t177 = 0.846*t161*t156;
  t178 = -1.*t162;
  t179 = 1. + t178;
  t180 = -0.846*t179*t160;
  t181 = Cos(t176);
  t182 = -1.*t181;
  t183 = 1. + t182;
  t184 = Sin(t176);
  t185 = t161*t156;
  t186 = t162*t160;
  t187 = t185 + t186;
  t188 = var[15];
  t189 = 0.846*t174*t169;
  t190 = -1.*t175;
  t191 = 1. + t190;
  t192 = -0.846*t191*t173;
  t193 = Cos(t188);
  t194 = -1.*t193;
  t195 = 1. + t194;
  t196 = Sin(t188);
  t197 = t174*t169;
  t198 = t175*t173;
  t199 = t197 + t198;
  t200 = -0.00313046*t9*t7;
  t201 = -0.089*t9*t5*t6*t20;
  t202 = 0.089*t28*t9*t5*t10;
  t203 = t9*t5*t6*t20;
  t204 = t21*t9*t5*t10;
  t205 = t203 + t204;
  t206 = -1.*t21*t9*t5*t6;
  t207 = t9*t5*t20*t10;
  t208 = t206 + t207;
  t209 = 0.089*t9*t5*t6*t24;
  t210 = -0.089*t41*t9*t5*t10;
  t211 = t9*t5*t6*t24;
  t212 = t25*t9*t5*t10;
  t213 = t211 + t212;
  t214 = -1.*t25*t9*t5*t6;
  t215 = t9*t5*t24*t10;
  t216 = t214 + t215;
  t217 = -0.0125*t53*t9*t5*t6;
  t218 = 0.0125*t9*t5*t14*t10;
  t219 = t9*t5*t6*t14;
  t220 = t15*t9*t5*t10;
  t221 = t219 + t220;
  t222 = -1.*t15*t9*t5*t6;
  t223 = t9*t5*t14*t10;
  t224 = t222 + t223;
  t225 = 0.089*t9*t37*t7;
  t226 = 0.089*t66*t205;
  t227 = -1.*t9*t37*t7;
  t228 = t38*t205;
  t229 = t227 + t228;
  t230 = -1.*t38*t9*t7;
  t231 = -1.*t37*t205;
  t232 = t230 + t231;
  t233 = -0.089*t9*t50*t7;
  t234 = -0.089*t80*t213;
  t235 = -1.*t9*t50*t7;
  t236 = t51*t213;
  t237 = t235 + t236;
  t238 = -1.*t51*t9*t7;
  t239 = -1.*t50*t213;
  t240 = t238 + t239;
  t241 = -1.*t9*t96*t7;
  t242 = t101*t224;
  t243 = t9*t60*t7;
  t244 = t59*t224;
  t245 = t243 + t244;
  t246 = -1.*t111;
  t247 = 1. + t246;
  t248 = -1.*t59*t9*t7;
  t249 = t60*t224;
  t250 = t248 + t249;
  t251 = t115*t208;
  t252 = 0.089*t229;
  t253 = t120*t232;
  t254 = t73*t208;
  t255 = t72*t232;
  t256 = t254 + t255;
  t257 = t72*t208;
  t258 = -1.*t73*t232;
  t259 = t257 + t258;
  t260 = t134*t216;
  t261 = -0.089*t237;
  t262 = t139*t240;
  t263 = t87*t216;
  t264 = t86*t240;
  t265 = t263 + t264;
  t266 = t86*t216;
  t267 = -1.*t87*t240;
  t268 = t266 + t267;
  t269 = -0.424*t151*t256;
  t270 = 0.424*t129*t259;
  t271 = -1.*t129*t256;
  t272 = t130*t259;
  t273 = t271 + t272;
  t274 = t130*t256;
  t275 = t129*t259;
  t276 = t274 + t275;
  t277 = -0.424*t164*t265;
  t278 = 0.424*t148*t268;
  t279 = -1.*t148*t265;
  t280 = t149*t268;
  t281 = t279 + t280;
  t282 = t149*t265;
  t283 = t148*t268;
  t284 = t282 + t283;
  t285 = 0.089*t183;
  t286 = -0.846*t184;
  t287 = t285 + t286;
  t288 = 0.846*t161*t273;
  t289 = -0.846*t179*t276;
  t290 = -0.846*t183;
  t291 = -0.089*t184;
  t292 = t290 + t291;
  t293 = t161*t273;
  t294 = t162*t276;
  t295 = t293 + t294;
  t296 = -0.089*t195;
  t297 = -0.846*t196;
  t298 = t296 + t297;
  t299 = 0.846*t174*t281;
  t300 = -0.846*t191*t284;
  t301 = -0.846*t195;
  t302 = 0.089*t196;
  t303 = t301 + t302;
  t304 = t174*t281;
  t305 = t175*t284;
  t306 = t304 + t305;
  t307 = t6*t2;
  t308 = t9*t7*t10;
  t309 = t307 + t308;
  t310 = t9*t6*t7;
  t311 = -1.*t2*t10;
  t312 = t310 + t311;
  t313 = t14*t312;
  t314 = t15*t309;
  t315 = t313 + t314;
  t316 = 0.0125*t14*t312;
  t317 = 0.0125*t53*t309;
  t318 = t15*t312;
  t319 = -1.*t14*t309;
  t320 = t318 + t319;
  t321 = 0.089*t28*t312;
  t322 = 0.089*t20*t309;
  t323 = t20*t312;
  t324 = t21*t309;
  t325 = t323 + t324;
  t326 = t21*t312;
  t327 = -1.*t20*t309;
  t328 = t326 + t327;
  t329 = -0.089*t41*t312;
  t330 = -0.089*t24*t309;
  t331 = t24*t312;
  t332 = t25*t309;
  t333 = t331 + t332;
  t334 = t25*t312;
  t335 = -1.*t24*t309;
  t336 = t334 + t335;
  t337 = t101*t315;
  t338 = 0.089*t66*t328;
  t339 = -0.089*t80*t336;
  t340 = t115*t325;
  t341 = 0.089*t38*t328;
  t342 = -1.*t37*t120*t328;
  t343 = t73*t325;
  t344 = -1.*t72*t37*t328;
  t345 = t343 + t344;
  t346 = t72*t325;
  t347 = t37*t73*t328;
  t348 = t346 + t347;
  t349 = t134*t333;
  t350 = -0.089*t51*t336;
  t351 = -1.*t50*t139*t336;
  t352 = t87*t333;
  t353 = -1.*t86*t50*t336;
  t354 = t352 + t353;
  t355 = t86*t333;
  t356 = t50*t87*t336;
  t357 = t355 + t356;
  t358 = -0.424*t151*t345;
  t359 = 0.424*t129*t348;
  t360 = -1.*t129*t345;
  t361 = t130*t348;
  t362 = t360 + t361;
  t363 = t130*t345;
  t364 = t129*t348;
  t365 = t363 + t364;
  t366 = -0.424*t164*t354;
  t367 = 0.424*t148*t357;
  t368 = -1.*t148*t354;
  t369 = t149*t357;
  t370 = t368 + t369;
  t371 = t149*t354;
  t372 = t148*t357;
  t373 = t371 + t372;
  t374 = 0.846*t161*t362;
  t375 = -0.846*t179*t365;
  t376 = t161*t362;
  t377 = t162*t365;
  t378 = t376 + t377;
  t379 = 0.846*t174*t370;
  t380 = -0.846*t191*t373;
  t381 = t174*t370;
  t382 = t175*t373;
  t383 = t381 + t382;
  t384 = -1.*t9*t6*t7;
  t385 = t2*t10;
  t386 = t384 + t385;
  t387 = -1.*t14*t386;
  t388 = t387 + t314;
  t389 = t59*t9*t5;
  t390 = t15*t386;
  t391 = t14*t309;
  t392 = t390 + t391;
  t393 = t60*t392;
  t394 = t389 + t393;
  t395 = -1.*t9*t5*t60;
  t396 = t59*t392;
  t397 = t395 + t396;
  t398 = -0.0125*t59;
  t399 = 0.16197*t60;
  t400 = t398 + t399;
  t401 = t9*t5*t400;
  t402 = -0.16197*t59;
  t403 = t402 + t95;
  t404 = t403*t392;
  t405 = -1.*t59*t9*t5;
  t406 = -1.*t60*t392;
  t407 = t405 + t406;
  t408 = -0.0125*t14*t386;
  t409 = 0.0125*t15*t309;
  t410 = -1.*t15*t386;
  t411 = t410 + t319;
  t412 = t101*t388;
  t413 = -1.*t20*t386;
  t414 = t413 + t324;
  t415 = t21*t386;
  t416 = t20*t309;
  t417 = t415 + t416;
  t418 = t38*t9*t5;
  t419 = -1.*t37*t414;
  t420 = t418 + t419;
  t421 = t73*t417;
  t422 = t72*t420;
  t423 = t421 + t422;
  t424 = t72*t417;
  t425 = -1.*t73*t420;
  t426 = t424 + t425;
  t427 = t9*t5*t37;
  t428 = t38*t414;
  t429 = t427 + t428;
  t430 = -1.*t129*t423;
  t431 = t130*t426;
  t432 = t430 + t431;
  t433 = t161*t432;
  t434 = t130*t423;
  t435 = t129*t426;
  t436 = t434 + t435;
  t437 = t162*t436;
  t438 = t433 + t437;
  t439 = 0.846*t162*t432;
  t440 = -0.846*t161*t436;
  t441 = t162*t432;
  t442 = -1.*t161*t436;
  t443 = t441 + t442;
  t444 = -1.*t9*t5*t37;
  t445 = -1.*t38*t414;
  t446 = t444 + t445;
  t447 = -0.089*t38*t9*t5;
  t448 = 0.089*t37*t414;
  t449 = t120*t446;
  t450 = 0.089*t420;
  t451 = -0.424*t72*t151*t446;
  t452 = -0.424*t73*t129*t446;
  t453 = -1.*t130*t73*t446;
  t454 = -1.*t72*t129*t446;
  t455 = t453 + t454;
  t456 = t72*t130*t446;
  t457 = -1.*t73*t129*t446;
  t458 = t456 + t457;
  t459 = 0.846*t161*t455;
  t460 = -0.846*t179*t458;
  t461 = t161*t455;
  t462 = t162*t458;
  t463 = t461 + t462;
  t464 = 0.05*t72;
  t465 = t464 + t74;
  t466 = t465*t417;
  t467 = -0.05*t73;
  t468 = t464 + t467;
  t469 = t468*t420;
  t470 = -1.*t73*t417;
  t471 = -1.*t72*t420;
  t472 = t470 + t471;
  t473 = 0.424*t129*t472;
  t474 = -0.424*t151*t426;
  t475 = t129*t472;
  t476 = t475 + t431;
  t477 = t130*t472;
  t478 = -1.*t129*t426;
  t479 = t477 + t478;
  t480 = -0.846*t179*t476;
  t481 = 0.846*t161*t479;
  t482 = t162*t476;
  t483 = t161*t479;
  t484 = t482 + t483;
  t485 = 0.089*t21*t386;
  t486 = -1.*t21*t386;
  t487 = t486 + t327;
  t488 = 0.089*t66*t487;
  t489 = t115*t414;
  t490 = 0.089*t38*t487;
  t491 = -1.*t37*t120*t487;
  t492 = t73*t414;
  t493 = -1.*t72*t37*t487;
  t494 = t492 + t493;
  t495 = t72*t414;
  t496 = t37*t73*t487;
  t497 = t495 + t496;
  t498 = -0.424*t151*t494;
  t499 = 0.424*t129*t497;
  t500 = -1.*t129*t494;
  t501 = t130*t497;
  t502 = t500 + t501;
  t503 = t130*t494;
  t504 = t129*t497;
  t505 = t503 + t504;
  t506 = 0.846*t161*t502;
  t507 = -0.846*t179*t505;
  t508 = t161*t502;
  t509 = t162*t505;
  t510 = t508 + t509;
  t511 = -0.424*t129*t423;
  t512 = 0.424*t130*t426;
  t513 = -1.*t130*t423;
  t514 = t513 + t478;
  t515 = -0.846*t179*t432;
  t516 = 0.846*t161*t514;
  t517 = -1.*t161*t432;
  t518 = t161*t514;
  t519 = t441 + t518;
  t520 = -1.*t24*t386;
  t521 = t520 + t332;
  t522 = t25*t386;
  t523 = t24*t309;
  t524 = t522 + t523;
  t525 = t51*t9*t5;
  t526 = -1.*t50*t521;
  t527 = t525 + t526;
  t528 = t87*t524;
  t529 = t86*t527;
  t530 = t528 + t529;
  t531 = t86*t524;
  t532 = -1.*t87*t527;
  t533 = t531 + t532;
  t534 = t9*t5*t50;
  t535 = t51*t521;
  t536 = t534 + t535;
  t537 = -1.*t148*t530;
  t538 = t149*t533;
  t539 = t537 + t538;
  t540 = t174*t539;
  t541 = t149*t530;
  t542 = t148*t533;
  t543 = t541 + t542;
  t544 = t175*t543;
  t545 = t540 + t544;
  t546 = 0.846*t175*t539;
  t547 = -0.846*t174*t543;
  t548 = t175*t539;
  t549 = -1.*t174*t543;
  t550 = t548 + t549;
  t551 = 0.089*t51*t9*t5;
  t552 = -0.089*t50*t521;
  t553 = -1.*t9*t5*t50;
  t554 = -1.*t51*t521;
  t555 = t553 + t554;
  t556 = t139*t555;
  t557 = -0.089*t527;
  t558 = -0.424*t86*t164*t555;
  t559 = -0.424*t87*t148*t555;
  t560 = -1.*t149*t87*t555;
  t561 = -1.*t86*t148*t555;
  t562 = t560 + t561;
  t563 = t86*t149*t555;
  t564 = -1.*t87*t148*t555;
  t565 = t563 + t564;
  t566 = 0.846*t174*t562;
  t567 = -0.846*t191*t565;
  t568 = t174*t562;
  t569 = t175*t565;
  t570 = t568 + t569;
  t571 = 0.05*t86;
  t572 = t571 + t88;
  t573 = t572*t524;
  t574 = -0.05*t87;
  t575 = t571 + t574;
  t576 = t575*t527;
  t577 = -1.*t87*t524;
  t578 = -1.*t86*t527;
  t579 = t577 + t578;
  t580 = 0.424*t148*t579;
  t581 = -0.424*t164*t533;
  t582 = t148*t579;
  t583 = t582 + t538;
  t584 = t149*t579;
  t585 = -1.*t148*t533;
  t586 = t584 + t585;
  t587 = -0.846*t191*t583;
  t588 = 0.846*t174*t586;
  t589 = t175*t583;
  t590 = t174*t586;
  t591 = t589 + t590;
  t592 = -0.089*t25*t386;
  t593 = -1.*t25*t386;
  t594 = t593 + t335;
  t595 = -0.089*t80*t594;
  t596 = t134*t521;
  t597 = -0.089*t51*t594;
  t598 = -1.*t50*t139*t594;
  t599 = t87*t521;
  t600 = -1.*t86*t50*t594;
  t601 = t599 + t600;
  t602 = t86*t521;
  t603 = t50*t87*t594;
  t604 = t602 + t603;
  t605 = -0.424*t164*t601;
  t606 = 0.424*t148*t604;
  t607 = -1.*t148*t601;
  t608 = t149*t604;
  t609 = t607 + t608;
  t610 = t149*t601;
  t611 = t148*t604;
  t612 = t610 + t611;
  t613 = 0.846*t174*t609;
  t614 = -0.846*t191*t612;
  t615 = t174*t609;
  t616 = t175*t612;
  t617 = t615 + t616;
  t618 = -0.424*t148*t530;
  t619 = 0.424*t149*t533;
  t620 = -1.*t149*t530;
  t621 = t620 + t585;
  t622 = -0.846*t191*t539;
  t623 = 0.846*t174*t621;
  t624 = -1.*t174*t539;
  t625 = t174*t621;
  t626 = t548 + t625;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=1076.50035;
  p_output1[3]=6.35688*(t22 + t26 + t29 + 0.08555268*t33 + 0.00529262*t36) + 6.35688*(t22 + t39 + t42 - 0.08555268*t46 + 0.00529262*t49) + 175.42242000000002*(0.0111*t12 - 0.0271*t2*t5) + 23.632289999999998*(-0.0746835*t2*t5 + t54 + t55 - 3.15366e-6*t58 - 0.0237984*t63) + 90.34029*(t116 + t117 + t121 - 0.26*t124 + 0.05*t128 + t26 + t29 + t64 + t67) + 53.748990000000006*(t116 + t117 + t121 + t152 + t153 + 0.001*t156 - 0.611*t160 + t26 + t29 + t64 + t67) + 1.22625*(t116 + t117 + t121 + t152 + t153 + t177 + t180 - 0.846*t187 + t26 + t29 + t64 + t67) + 20.1105*(t116 + t121 + t152 + t153 + 0.027*(-1.*t160*t161 + t156*t162) + t177 + t180 + t26 + t29 + t187*t292 + t64 + t67 + t287*t71 + 0.089*(t184*t187 + t181*t71) - 0.913*(t181*t187 - 1.*t184*t71)) + 8.49546*(t26 + t29 + 0.0133341*t36 + t64 + t67 + 0.1060484*t71 - 0.0312052*t77) + 90.34029*(t135 + t136 + t140 - 0.26*t143 + 0.05*t147 + t39 + t42 + t78 + t81) + 53.748990000000006*(t135 + t136 + t140 + t165 + t166 + 0.001*t169 - 0.611*t173 + t39 + t42 + t78 + t81) + 1.22625*(t135 + t136 + t140 + t165 + t166 + t189 + t192 - 0.846*t199 + t39 + t42 + t78 + t81) + 20.1105*(t135 + t140 + t165 + t166 + 0.027*(-1.*t173*t174 + t169*t175) + t189 + t192 + t199*t303 + t39 + t42 + t78 + t81 + t298*t85 - 0.089*(t196*t199 + t193*t85) - 0.913*(t193*t199 - 1.*t196*t85)) + 8.49546*(t39 + t42 + 0.0133341*t49 + t78 + t81 - 0.1060484*t85 - 0.0312052*t91) + 6.7688999999999995*(t102 - 0.02066266*t105 + 0.1925674*t109 + t54 + t55 - 0.0131245*t58 + t97) + 510.12*(t102 - 0.1048*t105 + 0.21197*t109*t247 + t54 + t55 + 0.21197*t110*t58 + 0.51197*(t109*t111 - 1.*t110*t58) + t97);
  p_output1[4]=6.35688*(t200 + t201 + t202 + 0.08555268*t205 + 0.00529262*t208) + 6.35688*(t200 + t209 + t210 - 0.08555268*t213 + 0.00529262*t216) + 8.49546*(t201 + t202 + 0.0133341*t208 + t225 + t226 + 0.1060484*t229 - 0.0312052*t232) + 8.49546*(t209 + t210 + 0.0133341*t216 + t233 + t234 - 0.1060484*t237 - 0.0312052*t240) + 6.7688999999999995*(t217 + t218 - 0.0131245*t221 + t241 + t242 - 0.02066266*t245 + 0.1925674*t250) + 510.12*(t217 + t218 + 0.21197*t110*t221 + t241 + t242 - 0.1048*t245 + 0.21197*t247*t250 + 0.51197*(-1.*t110*t221 + t111*t250)) + 90.34029*(t201 + t202 + t225 + t226 + t251 + t252 + t253 - 0.26*t256 + 0.05*t259) + 90.34029*(t209 + t210 + t233 + t234 + t260 + t261 + t262 - 0.26*t265 + 0.05*t268) + 53.748990000000006*(t201 + t202 + t225 + t226 + t251 + t252 + t253 + t269 + t270 + 0.001*t273 - 0.611*t276) + 53.748990000000006*(t209 + t210 + t233 + t234 + t260 + t261 + t262 + t277 + t278 + 0.001*t281 - 0.611*t284) + 1.22625*(t201 + t202 + t225 + t226 + t251 + t252 + t253 + t269 + t270 + t288 + t289 - 0.846*t295) + 20.1105*(t201 + t202 + t225 + t226 + t251 + t253 + t269 + t270 + 0.027*(t162*t273 - 1.*t161*t276) + t229*t287 + t288 + t289 + t292*t295 - 0.913*(-1.*t184*t229 + t181*t295) + 0.089*(t181*t229 + t184*t295)) + 1.22625*(t209 + t210 + t233 + t234 + t260 + t261 + t262 + t277 + t278 + t299 + t300 - 0.846*t306) + 20.1105*(t209 + t210 + t233 + t234 + t260 + t262 + t277 + t278 + 0.027*(t175*t281 - 1.*t174*t284) + t237*t298 + t299 + t300 + t303*t306 - 0.913*(-1.*t196*t237 + t193*t306) - 0.089*(t193*t237 + t196*t306)) + 23.632289999999998*(t217 + t218 - 3.15366e-6*t221 - 0.0237984*t224 - 0.0746835*t7*t9) + 175.42242000000002*(-0.0111*t5*t6*t9 - 0.0271*t7*t9);
  p_output1[5]=1.9471888620000002*t309 + 23.632289999999998*(-0.0237984*t315 + t316 + t317 - 3.15366e-6*t320) + 6.35688*(t321 + t322 + 0.00529262*t325 + 0.08555268*t328) + 6.35688*(t329 + t330 + 0.00529262*t333 - 0.08555268*t336) + 90.34029*(t321 + t322 + t338 + t340 + t341 + t342 - 0.26*t345 + 0.05*t348) + 90.34029*(t329 + t330 + t339 + t349 + t350 + t351 - 0.26*t354 + 0.05*t357) + 53.748990000000006*(t321 + t322 + t338 + t340 + t341 + t342 + t358 + t359 + 0.001*t362 - 0.611*t365) + 53.748990000000006*(t329 + t330 + t339 + t349 + t350 + t351 + t366 + t367 + 0.001*t370 - 0.611*t373) + 1.22625*(t321 + t322 + t338 + t340 + t341 + t342 + t358 + t359 + t374 + t375 - 0.846*t378) + 8.49546*(t321 + t322 + 0.0133341*t325 + t338 + 0.0312052*t328*t37 + 0.1060484*t328*t38) + 20.1105*(t321 + t322 + t338 + t340 + t342 + t358 + t359 + 0.027*(t162*t362 - 1.*t161*t365) + t374 + t375 + t292*t378 + t287*t328*t38 + 0.089*(t184*t378 + t181*t328*t38) - 0.913*(t181*t378 - 1.*t184*t328*t38)) + 1.22625*(t329 + t330 + t339 + t349 + t350 + t351 + t366 + t367 + t379 + t380 - 0.846*t383) + 8.49546*(t329 + t330 + 0.0133341*t333 + t339 + 0.0312052*t336*t50 - 0.1060484*t336*t51) + 20.1105*(t329 + t330 + t339 + t349 + t351 + t366 + t367 + 0.027*(t175*t370 - 1.*t174*t373) + t379 + t380 + t303*t383 + t298*t336*t51 - 0.089*(t196*t383 + t193*t336*t51) - 0.913*(t193*t383 - 1.*t196*t336*t51)) + 6.7688999999999995*(t316 + t317 - 0.0131245*t320 + t337 - 0.02066266*t315*t59 + 0.1925674*t315*t60) + 510.12*(t316 + t317 + 0.21197*t110*t320 + t337 - 0.1048*t315*t59 + 0.21197*t247*t315*t60 + 0.51197*(-1.*t110*t320 + t111*t315*t60));
  p_output1[6]=510.12*(0.21197*t111*t388 + 0.21197*t110*t394 + 0.51197*(-1.*t111*t388 - 1.*t110*t394));
  p_output1[7]=510.12*(0.51197*t111*t397 + 0.21197*t247*t397 + t401 + t404 - 0.1048*t407) + 6.7688999999999995*(0.1925674*t397 + t401 + t404 - 0.02066266*t407);
  p_output1[8]=23.632289999999998*(-0.0237984*t388 + t408 + t409 - 3.15366e-6*t411) + 6.7688999999999995*(t408 + t409 - 0.0131245*t411 + t412 - 0.02066266*t388*t59 + 0.1925674*t388*t60) + 510.12*(t408 + t409 + 0.21197*t110*t411 + t412 - 0.1048*t388*t59 + 0.21197*t247*t388*t60 + 0.51197*(-1.*t110*t411 + t111*t388*t60));
  p_output1[9]=20.1105*((-0.846*t181 + 0.089*t184)*t429 + (-0.089*t181 + t286)*t438 + 0.089*(-1.*t184*t429 + t181*t438) - 0.913*(-1.*t181*t429 - 1.*t184*t438));
  p_output1[10]=1.22625*(t439 + t440 - 0.846*t443) + 20.1105*(t439 + t440 - 0.913*t181*t443 + 0.089*t184*t443 + t292*t443 + 0.027*(-1.*t162*t436 + t517));
  p_output1[11]=8.49546*(0.1060484*t420 - 0.0312052*t446 + t447 + t448) + 53.748990000000006*(t447 + t448 + t449 + t450 + t451 + t452 + 0.001*t455 - 0.611*t458) + 1.22625*(t447 + t448 + t449 + t450 + t451 + t452 + t459 + t460 - 0.846*t463) + 20.1105*(t287*t420 + t447 + t448 + t449 + t451 + t452 + 0.027*(t162*t455 - 1.*t161*t458) + t459 + t460 + t292*t463 - 0.913*(-1.*t184*t420 + t181*t463) + 0.089*(t181*t420 + t184*t463)) + 90.34029*(t447 + t448 + t449 + t450 - 0.26*t446*t72 - 0.05*t446*t73);
  p_output1[12]=90.34029*(-0.26*t426 + t466 + t469 + 0.05*t472) + 53.748990000000006*(t466 + t469 + t473 + t474 - 0.611*t476 + 0.001*t479) + 1.22625*(t466 + t469 + t473 + t474 + t480 + t481 - 0.846*t484) + 20.1105*(t466 + t469 + t473 + t474 + 0.027*(-1.*t161*t476 + t162*t479) + t480 + t481 - 0.913*t181*t484 + 0.089*t184*t484 + t292*t484);
  p_output1[13]=6.35688*(t322 + 0.00529262*t414 + t485 + 0.08555268*t487) + 8.49546*(t322 + 0.0133341*t414 + t485 + 0.0312052*t37*t487 + 0.1060484*t38*t487 + t488) + 90.34029*(t322 + t485 + t488 + t489 + t490 + t491 - 0.26*t494 + 0.05*t497) + 53.748990000000006*(t322 + t485 + t488 + t489 + t490 + t491 + t498 + t499 + 0.001*t502 - 0.611*t505) + 1.22625*(t322 + t485 + t488 + t489 + t490 + t491 + t498 + t499 + t506 + t507 - 0.846*t510) + 20.1105*(t322 + t485 + t287*t38*t487 + t488 + t489 + t491 + t498 + t499 + 0.027*(t162*t502 - 1.*t161*t505) + t506 + t507 + t292*t510 - 0.913*(-1.*t184*t38*t487 + t181*t510) + 0.089*(t181*t38*t487 + t184*t510));
  p_output1[14]=53.748990000000006*(-0.611*t432 + t511 + t512 + 0.001*t514) + 1.22625*(t511 + t512 + t515 + t516 - 0.846*t519) + 20.1105*(t511 + t512 + t515 + t516 + 0.027*(t162*t514 + t517) - 0.913*t181*t519 + 0.089*t184*t519 + t292*t519);
  p_output1[15]=20.1105*((-0.846*t193 - 0.089*t196)*t536 + (0.089*t193 + t297)*t545 - 0.089*(-1.*t196*t536 + t193*t545) - 0.913*(-1.*t193*t536 - 1.*t196*t545));
  p_output1[16]=1.22625*(t546 + t547 - 0.846*t550) + 20.1105*(t546 + t547 - 0.913*t193*t550 - 0.089*t196*t550 + t303*t550 + 0.027*(-1.*t175*t543 + t624));
  p_output1[17]=8.49546*(-0.1060484*t527 + t551 + t552 - 0.0312052*t555) + 53.748990000000006*(t551 + t552 + t556 + t557 + t558 + t559 + 0.001*t562 - 0.611*t565) + 1.22625*(t551 + t552 + t556 + t557 + t558 + t559 + t566 + t567 - 0.846*t570) + 20.1105*(t298*t527 + t551 + t552 + t556 + t558 + t559 + 0.027*(t175*t562 - 1.*t174*t565) + t566 + t567 + t303*t570 - 0.913*(-1.*t196*t527 + t193*t570) - 0.089*(t193*t527 + t196*t570)) + 90.34029*(t551 + t552 + t556 + t557 - 0.26*t555*t86 - 0.05*t555*t87);
  p_output1[18]=90.34029*(-0.26*t533 + t573 + t576 + 0.05*t579) + 53.748990000000006*(t573 + t576 + t580 + t581 - 0.611*t583 + 0.001*t586) + 1.22625*(t573 + t576 + t580 + t581 + t587 + t588 - 0.846*t591) + 20.1105*(t573 + t576 + t580 + t581 + 0.027*(-1.*t174*t583 + t175*t586) + t587 + t588 - 0.913*t193*t591 - 0.089*t196*t591 + t303*t591);
  p_output1[19]=6.35688*(t330 + 0.00529262*t521 + t592 - 0.08555268*t594) + 8.49546*(t330 + 0.0133341*t521 + t592 + 0.0312052*t50*t594 - 0.1060484*t51*t594 + t595) + 90.34029*(t330 + t592 + t595 + t596 + t597 + t598 - 0.26*t601 + 0.05*t604) + 53.748990000000006*(t330 + t592 + t595 + t596 + t597 + t598 + t605 + t606 + 0.001*t609 - 0.611*t612) + 1.22625*(t330 + t592 + t595 + t596 + t597 + t598 + t605 + t606 + t613 + t614 - 0.846*t617) + 20.1105*(t330 + t592 + t298*t51*t594 + t595 + t596 + t598 + t605 + t606 + 0.027*(t175*t609 - 1.*t174*t612) + t613 + t614 + t303*t617 - 0.913*(-1.*t196*t51*t594 + t193*t617) - 0.089*(t193*t51*t594 + t196*t617));
  p_output1[20]=53.748990000000006*(-0.611*t539 + t618 + t619 + 0.001*t621) + 1.22625*(t618 + t619 + t622 + t623 - 0.846*t626) + 20.1105*(t618 + t619 + t622 + t623 + 0.027*(t175*t621 + t624) - 0.913*t193*t626 - 0.089*t196*t626 + t303*t626);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 21 && ncols == 1) && 
      !(mrows == 1 && ncols == 21))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var is wrong.");
    }

  /*  Assign pointers to each input.  */
  var = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 21, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var);


}

#else // MATLAB_MEX_FILE

#include "f_gravity_vec.hh"

namespace Kinematics
{
namespace basic
{

void f_gravity_vec_raw(double *p_output1, const double *var)
{
  // Call Subroutines
  output1(p_output1, var);

}

}
}

#endif // MATLAB_MEX_FILE
