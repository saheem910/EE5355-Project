/*
 * Automatically Generated from Mathematica.
 * Wed 29 Mar 2017 18:00:01 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var)
{
  double t1;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;
  double t10;
  double t11;
  double t12;
  double t13;
  double t14;
  double t15;
  double t16;
  double t17;
  double t18;
  double t19;
  double t20;
  double t21;
  double t22;
  double t23;
  double t24;
  double t25;
  double t26;
  double t27;
  double t28;
  double t29;
  double t30;
  double t31;
  double t32;
  double t33;
  double t34;
  double t35;
  double t36;
  double t37;
  double t38;
  double t39;
  double t40;
  double t41;
  double t42;
  double t43;
  double t44;
  double t45;
  double t46;
  double t47;
  double t48;
  double t49;
  double t50;
  double t51;
  double t52;
  double t53;
  double t54;
  double t55;
  double t56;
  double t57;
  double t58;
  double t59;
  double t60;
  double t61;
  double t62;
  double t63;
  double t64;
  double t65;
  double t66;
  double t67;
  double t68;
  double t69;
  double t70;
  double t71;
  double t72;
  double t73;
  double t74;
  double t75;
  double t76;
  double t77;
  double t78;
  double t79;
  double t80;
  double t81;
  double t82;
  double t83;
  double t84;
  double t85;
  double t86;
  double t87;
  double t88;
  double t89;
  double t90;
  double t91;
  double t92;
  double t93;
  double t94;
  double t95;
  double t96;
  double t97;
  double t98;
  double t99;
  double t100;
  double t101;
  double t102;
  double t103;
  double t104;
  double t105;
  double t106;
  double t107;
  double t108;
  double t109;
  double t110;
  double t111;
  double t112;
  double t113;
  double t114;
  double t115;
  double t116;
  double t117;
  double t118;
  double t119;
  double t120;
  double t121;
  double t122;
  double t123;
  double t124;
  double t125;
  double t126;
  double t127;
  double t128;
  double t129;
  double t130;
  double t131;
  double t132;
  double t133;
  double t134;
  double t135;
  double t136;
  double t137;
  double t138;
  double t139;
  double t140;
  double t141;
  double t142;
  double t143;
  double t144;
  double t145;
  double t146;
  double t147;
  double t148;
  double t149;
  double t150;
  double t151;
  double t152;
  double t153;
  double t154;
  double t155;
  double t156;
  double t157;
  double t158;
  double t159;
  double t160;
  double t161;
  double t162;
  double t163;
  double t164;
  double t165;
  double t166;
  double t167;
  double t168;
  double t169;
  double t170;
  double t171;
  double t172;
  double t173;
  double t174;
  double t175;
  double t176;
  double t177;
  double t178;
  double t179;
  double t180;
  double t181;
  double t182;
  double t183;
  double t184;
  double t185;
  double t186;
  double t187;
  double t188;
  double t189;
  double t190;
  double t191;
  double t192;
  double t193;
  double t194;
  double t195;
  double t196;
  double t197;
  double t198;
  double t199;
  double t200;
  double t201;
  double t202;
  double t203;
  double t204;
  double t205;
  double t206;
  double t207;
  double t208;
  double t209;
  double t210;
  double t211;
  double t212;
  double t213;
  double t214;
  double t215;
  double t216;
  double t217;
  double t218;
  double t219;
  double t220;
  double t221;
  double t222;
  double t223;
  double t224;
  double t225;
  double t226;
  double t227;
  double t228;
  double t229;
  double t230;
  double t231;
  double t232;
  double t233;
  double t234;
  double t235;
  double t236;
  double t237;
  double t238;
  double t239;
  double t240;
  double t241;
  double t242;
  double t243;
  double t244;
  double t245;
  double t246;
  double t247;
  double t248;
  double t249;
  double t250;
  double t251;
  double t252;
  double t253;
  double t254;
  double t255;
  double t256;
  double t257;
  double t258;
  double t259;
  double t260;
  double t261;
  double t262;
  double t263;
  double t264;
  double t265;
  double t266;
  double t267;
  double t268;
  double t269;
  double t270;
  double t271;
  double t272;
  double t273;
  double t274;
  double t275;
  double t276;
  double t277;
  double t278;
  double t279;
  double t280;
  double t281;
  double t282;
  double t283;
  double t284;
  double t285;
  double t286;
  double t287;
  double t288;
  double t289;
  double t290;
  double t291;
  double t292;
  double t293;
  double t294;
  double t295;
  double t296;
  double t297;
  double t298;
  double t299;
  double t300;
  double t301;
  double t302;
  double t303;
  double t304;
  double t305;
  double t306;
  double t307;
  double t308;
  double t309;
  double t310;
  double t311;
  double t312;
  double t313;
  double t314;
  double t315;
  double t316;
  double t317;
  double t318;
  double t319;
  double t320;
  double t321;
  double t322;
  double t323;
  double t324;
  double t325;
  double t326;
  double t327;
  double t328;
  double t329;
  double t330;
  double t331;
  double t332;
  double t333;
  double t334;
  double t335;
  double t336;
  double t337;
  double t338;
  double t339;
  double t340;
  double t341;
  double t342;
  double t343;
  double t344;
  double t345;
  double t346;
  double t347;
  double t348;
  double t349;
  double t350;
  double t351;
  double t352;
  double t353;
  double t354;
  double t355;
  double t356;
  double t357;
  double t358;
  double t359;
  double t360;
  double t361;
  double t362;
  double t363;
  double t364;
  double t365;
  double t366;
  double t367;
  double t368;
  double t369;
  double t370;
  double t371;
  double t372;
  double t373;
  double t374;
  double t375;
  double t376;
  double t377;
  double t378;
  double t379;
  double t380;
  double t381;
  double t382;
  double t383;
  double t384;
  double t385;
  double t386;
  double t387;
  double t388;
  double t389;
  double t390;
  double t391;
  double t392;
  double t393;
  double t394;
  double t395;
  double t396;
  double t397;
  double t398;
  double t399;
  double t400;
  double t401;
  double t402;
  double t403;
  double t404;
  double t405;
  double t406;
  double t407;
  double t408;
  double t409;
  double t410;
  double t411;
  double t412;
  double t413;
  double t414;
  double t415;
  double t416;
  double t417;
  double t418;
  double t419;
  double t420;
  double t421;
  double t422;
  double t423;
  double t424;
  double t425;
  double t426;
  double t427;
  double t428;
  double t429;
  double t430;
  double t431;
  double t432;
  double t433;
  double t434;
  double t435;
  double t436;
  double t437;
  double t438;
  double t439;
  double t440;
  double t441;
  double t442;
  double t443;
  double t444;
  double t445;
  double t446;
  double t447;
  double t448;
  double t449;
  double t450;
  double t451;
  double t452;
  double t453;
  double t454;
  double t455;
  double t456;
  double t457;
  double t458;
  double t459;
  double t460;
  double t461;
  double t462;
  double t463;
  double t464;
  double t465;
  double t466;
  double t467;
  double t468;
  double t469;
  double t470;
  double t471;
  double t472;
  double t473;
  double t474;
  double t475;
  double t476;
  double t477;
  double t478;
  double t479;
  double t480;
  double t481;
  double t482;
  double t483;
  double t484;
  double t485;
  double t486;
  double t487;
  double t488;
  double t489;
  t1 = var[9];
  t2 = var[11];
  t3 = var[4];
  t4 = var[13];
  t5 = Cos(t3);
  t6 = var[5];
  t7 = Cos(t1);
  t8 = Sin(t1);
  t9 = Cos(t4);
  t10 = Cos(t6);
  t11 = Sin(t4);
  t12 = Sin(t6);
  t13 = var[12];
  t14 = Cos(t2);
  t15 = Sin(t3);
  t16 = Sin(t2);
  t17 = -1.*t5*t10*t11;
  t18 = -1.*t9*t5*t12;
  t19 = t17 + t18;
  t20 = var[14];
  t21 = Cos(t13);
  t22 = t9*t5*t10;
  t23 = -1.*t5*t11*t12;
  t24 = t22 + t23;
  t25 = Sin(t13);
  t26 = t14*t15;
  t27 = -1.*t16*t19;
  t28 = t26 + t27;
  t29 = var[10];
  t30 = Cos(t20);
  t31 = t25*t24;
  t32 = t21*t28;
  t33 = t31 + t32;
  t34 = Sin(t20);
  t35 = t21*t24;
  t36 = -1.*t25*t28;
  t37 = t35 + t36;
  t38 = t16*t15;
  t39 = t14*t19;
  t40 = t38 + t39;
  t41 = Sin(t29);
  t42 = -1.*t34*t33;
  t43 = t30*t37;
  t44 = t42 + t43;
  t45 = t41*t44;
  t46 = Cos(t29);
  t47 = t30*t33;
  t48 = t34*t37;
  t49 = t47 + t48;
  t50 = t46*t49;
  t51 = t45 + t50;
  t52 = t46*t44;
  t53 = -1.*t41*t49;
  t54 = t52 + t53;
  t55 = -1.*t16*t15;
  t56 = -1.*t14*t19;
  t57 = t55 + t56;
  t58 = -1.*t7;
  t59 = 1. + t58;
  t60 = -0.846*t8;
  t61 = -0.846*t59;
  t62 = -0.089*t8;
  t63 = t61 + t62;
  t64 = -1.*t30*t25*t57;
  t65 = -1.*t21*t34*t57;
  t66 = t64 + t65;
  t67 = t21*t30*t57;
  t68 = -1.*t25*t34*t57;
  t69 = t67 + t68;
  t70 = t41*t66;
  t71 = t46*t69;
  t72 = t70 + t71;
  t73 = 0.05*t25;
  t74 = 0.05*t21;
  t75 = -1.*t30;
  t76 = 1. + t75;
  t77 = -1.*t46;
  t78 = 1. + t77;
  t79 = -1.*t25*t24;
  t80 = -1.*t21*t28;
  t81 = t79 + t80;
  t82 = t34*t81;
  t83 = t82 + t43;
  t84 = t30*t81;
  t85 = -1.*t34*t37;
  t86 = t84 + t85;
  t87 = t46*t83;
  t88 = t41*t86;
  t89 = t87 + t88;
  t90 = 0.089*t59;
  t91 = t90 + t60;
  t92 = -1.*t9*t5*t10;
  t93 = t5*t11*t12;
  t94 = t92 + t93;
  t95 = -1. + t21;
  t96 = 0.05*t95;
  t97 = t96 + t73;
  t98 = t25*t19;
  t99 = -1.*t21*t16*t94;
  t100 = t98 + t99;
  t101 = t21*t19;
  t102 = t16*t25*t94;
  t103 = t101 + t102;
  t104 = -1.*t34*t100;
  t105 = t30*t103;
  t106 = t104 + t105;
  t107 = t30*t100;
  t108 = t34*t103;
  t109 = t107 + t108;
  t110 = t41*t106;
  t111 = t46*t109;
  t112 = t110 + t111;
  t113 = -1.*t41*t44;
  t114 = -1.*t30*t33;
  t115 = t114 + t85;
  t116 = t41*t115;
  t117 = t52 + t116;
  t118 = -1.*t14;
  t119 = 1. + t118;
  t120 = -1.*t21;
  t121 = 1. + t120;
  t122 = 0.05*t121;
  t123 = t122 + t73;
  t124 = t10*t11*t15;
  t125 = t9*t15*t12;
  t126 = t124 + t125;
  t127 = -1.*t9*t10*t15;
  t128 = t11*t15*t12;
  t129 = t127 + t128;
  t130 = t14*t5;
  t131 = -1.*t16*t126;
  t132 = t130 + t131;
  t133 = t25*t129;
  t134 = t21*t132;
  t135 = t133 + t134;
  t136 = t21*t129;
  t137 = -1.*t25*t132;
  t138 = t136 + t137;
  t139 = -1.*t34*t135;
  t140 = t30*t138;
  t141 = t139 + t140;
  t142 = t30*t135;
  t143 = t34*t138;
  t144 = t142 + t143;
  t145 = t5*t16;
  t146 = t14*t126;
  t147 = t145 + t146;
  t148 = t41*t141;
  t149 = t46*t144;
  t150 = t148 + t149;
  t151 = -1.*t9;
  t152 = 1. + t151;
  t153 = -0.089*t5*t11*t12;
  t154 = t123*t19;
  t155 = 0.089*t119*t94;
  t156 = t14*t91*t94;
  t157 = -1.*t16*t97*t94;
  t158 = -0.424*t76*t100;
  t159 = 0.424*t34*t103;
  t160 = 0.846*t41*t106;
  t161 = -0.846*t78*t109;
  t162 = t63*t112;
  t163 = t46*t106;
  t164 = -1.*t41*t109;
  t165 = t163 + t164;
  t166 = 0.1728*t165;
  t167 = -1.*t14*t8*t94;
  t168 = t7*t112;
  t169 = t167 + t168;
  t170 = -0.92245*t169;
  t171 = t7*t14*t94;
  t172 = t8*t112;
  t173 = t171 + t172;
  t174 = 0.089*t173;
  t175 = -0.846*t7;
  t176 = 0.089*t8;
  t177 = t175 + t176;
  t178 = var[3];
  t179 = Sin(t178);
  t180 = Cos(t178);
  t181 = -0.089*t7;
  t182 = t181 + t60;
  t183 = t10*t179*t15;
  t184 = t180*t12;
  t185 = t183 + t184;
  t186 = t180*t10;
  t187 = -1.*t179*t15*t12;
  t188 = t186 + t187;
  t189 = -1.*t11*t185;
  t190 = t9*t188;
  t191 = t189 + t190;
  t192 = t9*t185;
  t193 = t11*t188;
  t194 = t192 + t193;
  t195 = -1.*t14*t5*t179;
  t196 = -1.*t16*t191;
  t197 = t195 + t196;
  t198 = t25*t194;
  t199 = t21*t197;
  t200 = t198 + t199;
  t201 = t21*t194;
  t202 = -1.*t25*t197;
  t203 = t201 + t202;
  t204 = -1.*t5*t16*t179;
  t205 = t14*t191;
  t206 = t204 + t205;
  t207 = -1.*t34*t200;
  t208 = t30*t203;
  t209 = t207 + t208;
  t210 = t41*t209;
  t211 = t30*t200;
  t212 = t34*t203;
  t213 = t211 + t212;
  t214 = t46*t213;
  t215 = t210 + t214;
  t216 = var[30];
  t217 = t46*t209;
  t218 = -1.*t41*t213;
  t219 = t217 + t218;
  t220 = var[31];
  t221 = t5*t16*t179;
  t222 = -1.*t14*t191;
  t223 = t221 + t222;
  t224 = -1.*t30*t25*t223;
  t225 = -1.*t21*t34*t223;
  t226 = t224 + t225;
  t227 = t21*t30*t223;
  t228 = -1.*t25*t34*t223;
  t229 = t227 + t228;
  t230 = t41*t226;
  t231 = t46*t229;
  t232 = t230 + t231;
  t233 = var[32];
  t234 = t74 + t73;
  t235 = -0.05*t25;
  t236 = t74 + t235;
  t237 = -1.*t25*t194;
  t238 = -1.*t21*t197;
  t239 = t237 + t238;
  t240 = t34*t239;
  t241 = t240 + t208;
  t242 = t30*t239;
  t243 = -1.*t34*t203;
  t244 = t242 + t243;
  t245 = t46*t241;
  t246 = t41*t244;
  t247 = t245 + t246;
  t248 = var[33];
  t249 = -1.*t9*t185;
  t250 = -1.*t11*t188;
  t251 = t249 + t250;
  t252 = t25*t191;
  t253 = -1.*t21*t16*t251;
  t254 = t252 + t253;
  t255 = t21*t191;
  t256 = t16*t25*t251;
  t257 = t255 + t256;
  t258 = -1.*t34*t254;
  t259 = t30*t257;
  t260 = t258 + t259;
  t261 = t30*t254;
  t262 = t34*t257;
  t263 = t261 + t262;
  t264 = t41*t260;
  t265 = t46*t263;
  t266 = t264 + t265;
  t267 = var[34];
  t268 = -1.*t41*t209;
  t269 = -1.*t30*t200;
  t270 = t269 + t243;
  t271 = t41*t270;
  t272 = t217 + t271;
  t273 = var[35];
  t274 = t180*t10*t15;
  t275 = -1.*t179*t12;
  t276 = t274 + t275;
  t277 = -1.*t10*t179;
  t278 = -1.*t180*t15*t12;
  t279 = t277 + t278;
  t280 = -1.*t11*t276;
  t281 = t9*t279;
  t282 = t280 + t281;
  t283 = t9*t276;
  t284 = t11*t279;
  t285 = t283 + t284;
  t286 = -1.*t14*t180*t5;
  t287 = -1.*t16*t282;
  t288 = t286 + t287;
  t289 = t25*t285;
  t290 = t21*t288;
  t291 = t289 + t290;
  t292 = t21*t285;
  t293 = -1.*t25*t288;
  t294 = t292 + t293;
  t295 = -1.*t34*t291;
  t296 = t30*t294;
  t297 = t295 + t296;
  t298 = t30*t291;
  t299 = t34*t294;
  t300 = t298 + t299;
  t301 = -1.*t180*t5*t16;
  t302 = t14*t282;
  t303 = t301 + t302;
  t304 = t41*t297;
  t305 = t46*t300;
  t306 = t304 + t305;
  t307 = -1.*t5*t10*t11*t179;
  t308 = -1.*t9*t5*t179*t12;
  t309 = t307 + t308;
  t310 = t9*t5*t10*t179;
  t311 = -1.*t5*t11*t179*t12;
  t312 = t310 + t311;
  t313 = t14*t179*t15;
  t314 = -1.*t16*t309;
  t315 = t313 + t314;
  t316 = t25*t312;
  t317 = t21*t315;
  t318 = t316 + t317;
  t319 = t21*t312;
  t320 = -1.*t25*t315;
  t321 = t319 + t320;
  t322 = -1.*t34*t318;
  t323 = t30*t321;
  t324 = t322 + t323;
  t325 = t30*t318;
  t326 = t34*t321;
  t327 = t325 + t326;
  t328 = t16*t179*t15;
  t329 = t14*t309;
  t330 = t328 + t329;
  t331 = t41*t324;
  t332 = t46*t327;
  t333 = t331 + t332;
  t334 = var[25];
  t335 = 0.089*t11*t188;
  t336 = -1.*t10*t179*t15;
  t337 = -1.*t180*t12;
  t338 = t336 + t337;
  t339 = t9*t338;
  t340 = t339 + t250;
  t341 = t11*t338;
  t342 = t341 + t190;
  t343 = t25*t342;
  t344 = -1.*t21*t16*t340;
  t345 = t343 + t344;
  t346 = t21*t342;
  t347 = t16*t25*t340;
  t348 = t346 + t347;
  t349 = -1.*t34*t345;
  t350 = t30*t348;
  t351 = t349 + t350;
  t352 = t30*t345;
  t353 = t34*t348;
  t354 = t352 + t353;
  t355 = t41*t351;
  t356 = t46*t354;
  t357 = t355 + t356;
  t358 = var[26];
  t359 = -1.*t180*t10*t15;
  t360 = t179*t12;
  t361 = t359 + t360;
  t362 = t10*t179;
  t363 = t180*t15*t12;
  t364 = t362 + t363;
  t365 = -1.*t11*t361;
  t366 = t9*t364;
  t367 = t365 + t366;
  t368 = t9*t361;
  t369 = t11*t364;
  t370 = t368 + t369;
  t371 = t14*t180*t5;
  t372 = -1.*t16*t367;
  t373 = t371 + t372;
  t374 = t25*t370;
  t375 = t21*t373;
  t376 = t374 + t375;
  t377 = t21*t370;
  t378 = -1.*t25*t373;
  t379 = t377 + t378;
  t380 = t180*t5*t16;
  t381 = t14*t367;
  t382 = t380 + t381;
  t383 = -1.*t34*t376;
  t384 = t30*t379;
  t385 = t383 + t384;
  t386 = t41*t385;
  t387 = t30*t376;
  t388 = t34*t379;
  t389 = t387 + t388;
  t390 = t46*t389;
  t391 = t386 + t390;
  t392 = t46*t385;
  t393 = -1.*t41*t389;
  t394 = t392 + t393;
  t395 = -1.*t14*t367;
  t396 = t301 + t395;
  t397 = -1.*t30*t25*t396;
  t398 = -1.*t21*t34*t396;
  t399 = t397 + t398;
  t400 = t21*t30*t396;
  t401 = -1.*t25*t34*t396;
  t402 = t400 + t401;
  t403 = t41*t399;
  t404 = t46*t402;
  t405 = t403 + t404;
  t406 = -1.*t25*t370;
  t407 = -1.*t21*t373;
  t408 = t406 + t407;
  t409 = t34*t408;
  t410 = t409 + t384;
  t411 = t30*t408;
  t412 = -1.*t34*t379;
  t413 = t411 + t412;
  t414 = t46*t410;
  t415 = t41*t413;
  t416 = t414 + t415;
  t417 = -1.*t9*t361;
  t418 = -1.*t11*t364;
  t419 = t417 + t418;
  t420 = t25*t367;
  t421 = -1.*t21*t16*t419;
  t422 = t420 + t421;
  t423 = t21*t367;
  t424 = t16*t25*t419;
  t425 = t423 + t424;
  t426 = -1.*t34*t422;
  t427 = t30*t425;
  t428 = t426 + t427;
  t429 = t30*t422;
  t430 = t34*t425;
  t431 = t429 + t430;
  t432 = t41*t428;
  t433 = t46*t431;
  t434 = t432 + t433;
  t435 = -1.*t41*t385;
  t436 = -1.*t30*t376;
  t437 = t436 + t412;
  t438 = t41*t437;
  t439 = t392 + t438;
  t440 = -1.*t8*t206;
  t441 = t7*t215;
  t442 = t440 + t441;
  t443 = var[24];
  t444 = t180*t5*t10*t11;
  t445 = t9*t180*t5*t12;
  t446 = t444 + t445;
  t447 = -1.*t9*t180*t5*t10;
  t448 = t180*t5*t11*t12;
  t449 = t447 + t448;
  t450 = -1.*t14*t180*t15;
  t451 = -1.*t16*t446;
  t452 = t450 + t451;
  t453 = t25*t449;
  t454 = t21*t452;
  t455 = t453 + t454;
  t456 = t21*t449;
  t457 = -1.*t25*t452;
  t458 = t456 + t457;
  t459 = -1.*t34*t455;
  t460 = t30*t458;
  t461 = t459 + t460;
  t462 = t30*t455;
  t463 = t34*t458;
  t464 = t462 + t463;
  t465 = -1.*t180*t16*t15;
  t466 = t14*t446;
  t467 = t465 + t466;
  t468 = t41*t461;
  t469 = t46*t464;
  t470 = t468 + t469;
  t471 = 0.089*t11*t364;
  t472 = t283 + t418;
  t473 = t11*t276;
  t474 = t473 + t366;
  t475 = t25*t474;
  t476 = -1.*t21*t16*t472;
  t477 = t475 + t476;
  t478 = t21*t474;
  t479 = t16*t25*t472;
  t480 = t478 + t479;
  t481 = -1.*t34*t477;
  t482 = t30*t480;
  t483 = t481 + t482;
  t484 = t30*t477;
  t485 = t34*t480;
  t486 = t484 + t485;
  t487 = t41*t483;
  t488 = t46*t486;
  t489 = t487 + t488;
  p_output1[0]=t358*(t153 + t154 + t155 + t156 + t157 + t158 + t159 + t160 + t161 + t162 + t166 + t170 + t174 - 0.089*t10*t152*t5) + t273*(-0.424*t33*t34 + 0.424*t30*t37 + 0.846*t115*t41 + 0.1728*(t113 + t115*t46) + t117*t63 - 0.92245*t117*t7 - 0.846*t44*t78 + 0.089*t117*t8) + t220*(0.846*t44*t46 - 0.846*t41*t49 + 0.1728*(t113 - 1.*t46*t49) + t54*t63 - 0.92245*t54*t7 + 0.089*t54*t8) + t216*(t177*t40 + t182*t51 + 0.089*(t51*t7 - 1.*t40*t8) - 0.92245*(-1.*t40*t7 - 1.*t51*t8)) + t248*(t234*t24 + t236*t28 - 0.424*t37*t76 + 0.424*t34*t81 - 0.846*t78*t83 + 0.846*t41*t86 + 0.1728*(-1.*t41*t83 + t46*t86) + t63*t89 - 0.92245*t7*t89 + 0.089*t8*t89) + t267*(t153 + t154 + t155 + t156 + t157 + t158 + t159 + t160 + t161 + t162 + t166 + t170 + t174 + 0.089*t10*t5*t9) + t334*(0.089*t119*t126 + t123*t129 - 0.089*t10*t11*t15 + 0.089*t12*t15*t152 + 0.424*t138*t34 + 0.846*t141*t41 + 0.1728*(-1.*t144*t41 + t141*t46) - 0.089*t16*t5 + t150*t63 - 0.424*t135*t76 - 0.846*t144*t78 - 0.92245*(t150*t7 - 1.*t147*t8) + 0.089*(t147*t7 + t150*t8) + t147*t91 + t132*t97) + t233*(-0.089*t14*t15 + 0.089*t16*t19 - 0.424*t25*t34*t57 + 0.846*t41*t66 + 0.1728*(t46*t66 - 1.*t41*t69) + t63*t72 - 0.424*t21*t57*t76 - 0.846*t69*t78 - 0.92245*(t7*t72 - 1.*t28*t8) + 0.089*(t28*t7 + t72*t8) + t28*t91 + t57*t97) + var[21];
  p_output1[1]=t220*(-0.846*t213*t41 + 0.846*t209*t46 + 0.1728*(t268 - 1.*t213*t46) + t219*t63 - 0.92245*t219*t7 + 0.089*t219*t8) + t248*(t194*t234 + t197*t236 + 0.424*t239*t34 + 0.846*t244*t41 + 0.1728*(-1.*t241*t41 + t244*t46) + t247*t63 - 0.92245*t247*t7 - 0.424*t203*t76 - 0.846*t241*t78 + 0.089*t247*t8) + t273*(0.424*t203*t30 - 0.424*t200*t34 + 0.846*t270*t41 + 0.1728*(t268 + t270*t46) + t272*t63 - 0.92245*t272*t7 - 0.846*t209*t78 + 0.089*t272*t8) + t216*(t177*t206 + t182*t215 + 0.089*t442 - 0.92245*(-1.*t206*t7 - 1.*t215*t8)) + t233*(0.089*t16*t191 - 0.424*t223*t25*t34 + 0.846*t226*t41 + 0.1728*(-1.*t229*t41 + t226*t46) + 0.089*t14*t179*t5 + t232*t63 - 0.424*t21*t223*t76 - 0.846*t229*t78 - 0.92245*(t232*t7 - 1.*t197*t8) + 0.089*(t197*t7 + t232*t8) + t197*t91 + t223*t97) + t267*(t123*t191 + 0.089*t119*t251 + t335 + 0.424*t257*t34 + 0.846*t260*t41 + 0.1728*(-1.*t263*t41 + t260*t46) + t266*t63 - 0.424*t254*t76 - 0.846*t263*t78 - 0.92245*(t266*t7 - 1.*t14*t251*t8) + 0.089*(t14*t251*t7 + t266*t8) + 0.089*t185*t9 + t14*t251*t91 - 1.*t16*t251*t97) + t443*(0.089*t11*t276 + 0.089*t152*t279 + 0.089*t119*t282 + t123*t285 + 0.424*t294*t34 + 0.846*t297*t41 + 0.1728*(-1.*t300*t41 + t297*t46) + 0.089*t16*t180*t5 + t306*t63 - 0.424*t291*t76 - 0.846*t300*t78 - 0.92245*(t306*t7 - 1.*t303*t8) + 0.089*(t303*t7 + t306*t8) + t303*t91 + t288*t97) + t334*(-0.089*t15*t16*t179 + 0.089*t119*t309 + t123*t312 + 0.424*t321*t34 + 0.846*t324*t41 + 0.1728*(-1.*t327*t41 + t324*t46) + 0.089*t10*t11*t179*t5 - 0.089*t12*t152*t179*t5 + t333*t63 - 0.424*t318*t76 - 0.846*t327*t78 - 0.92245*(t333*t7 - 1.*t330*t8) + 0.089*(t330*t7 + t333*t8) + t330*t91 + t315*t97) + t358*(t335 + 0.089*t152*t338 + 0.089*t119*t340 + t123*t342 + 0.424*t34*t348 + 0.846*t351*t41 + 0.1728*(-1.*t354*t41 + t351*t46) + t357*t63 - 0.424*t345*t76 - 0.846*t354*t78 - 0.92245*(t357*t7 - 1.*t14*t340*t8) + 0.089*(t14*t340*t7 + t357*t8) + t14*t340*t91 - 1.*t16*t340*t97) + var[22];
  p_output1[2]=t220*(-0.846*t389*t41 + 0.846*t385*t46 + 0.1728*(t435 - 1.*t389*t46) + t394*t63 - 0.92245*t394*t7 + 0.089*t394*t8) + t248*(t234*t370 + t236*t373 + 0.424*t34*t408 + 0.846*t41*t413 + 0.1728*(-1.*t41*t410 + t413*t46) + t416*t63 - 0.92245*t416*t7 - 0.424*t379*t76 - 0.846*t410*t78 + 0.089*t416*t8) + t273*(-0.424*t34*t376 + 0.424*t30*t379 + 0.846*t41*t437 + 0.1728*(t435 + t437*t46) + t439*t63 - 0.92245*t439*t7 - 0.846*t385*t78 + 0.089*t439*t8) + t216*(t177*t382 + t182*t391 + 0.089*(t391*t7 - 1.*t382*t8) - 0.92245*(-1.*t382*t7 - 1.*t391*t8)) + t443*(0.089*t11*t185 + 0.089*t152*t188 + 0.089*t119*t191 + t123*t194 + 0.1728*t219 + 0.424*t203*t34 + 0.846*t209*t41 - 0.92245*t442 + 0.089*t16*t179*t5 + t215*t63 - 0.424*t200*t76 - 0.846*t213*t78 + 0.089*(t206*t7 + t215*t8) + t206*t91 + t197*t97) + t233*(0.089*t16*t367 - 0.424*t25*t34*t396 + 0.846*t399*t41 + 0.1728*(-1.*t402*t41 + t399*t46) - 0.089*t14*t180*t5 + t405*t63 - 0.424*t21*t396*t76 - 0.846*t402*t78 - 0.92245*(t405*t7 - 1.*t373*t8) + 0.089*(t373*t7 + t405*t8) + t373*t91 + t396*t97) + t267*(t123*t367 + 0.089*t119*t419 + 0.424*t34*t425 + 0.846*t41*t428 + 0.1728*(-1.*t41*t431 + t428*t46) + t471 + t434*t63 - 0.424*t422*t76 - 0.846*t431*t78 - 0.92245*(t434*t7 - 1.*t14*t419*t8) + 0.089*(t14*t419*t7 + t434*t8) + 0.089*t361*t9 + t14*t419*t91 - 1.*t16*t419*t97) + t334*(0.089*t15*t16*t180 + 0.089*t119*t446 + t123*t449 + 0.424*t34*t458 + 0.846*t41*t461 + 0.1728*(t46*t461 - 1.*t41*t464) - 0.089*t10*t11*t180*t5 + 0.089*t12*t152*t180*t5 + t470*t63 - 0.424*t455*t76 - 0.846*t464*t78 - 0.92245*(t470*t7 - 1.*t467*t8) + 0.089*(t467*t7 + t470*t8) + t467*t91 + t452*t97) + t358*(0.089*t152*t276 + t471 + 0.089*t119*t472 + t123*t474 + 0.424*t34*t480 + 0.846*t41*t483 + 0.1728*(t46*t483 - 1.*t41*t486) + t489*t63 - 0.424*t477*t76 - 0.846*t486*t78 - 0.92245*(t489*t7 - 1.*t14*t472*t8) + 0.089*(t14*t472*t7 + t489*t8) + t14*t472*t91 - 1.*t16*t472*t97) + var[23];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 42 && ncols == 1) && 
      !(mrows == 1 && ncols == 42))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var is wrong.");
    }

  /*  Assign pointers to each input.  */
  var = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var);


}

#else // MATLAB_MEX_FILE

#include "f_impactToeVelocity_vec.hh"

namespace Kinematics
{
namespace basic
{

void f_impactToeVelocity_vec_raw(double *p_output1, const double *var)
{
  // Call Subroutines
  output1(p_output1, var);

}

}
}

#endif // MATLAB_MEX_FILE
